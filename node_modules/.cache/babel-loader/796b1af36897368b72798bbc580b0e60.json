{"ast":null,"code":"var _jsxFileName = \"/Users/jonaspeek/SYE/frontend/src/components/ToDoList.js\";\nimport \"./ToDoList.css\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport * as actions from \"../actions\";\nimport TicketColumn from './TicketColumn';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\n\nclass ToDoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addFormVisible: false,\n      addFormValue: \"\",\n      addFormDescription: \"\",\n      addFormOwner: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        addFormValue: event.target.value\n      });\n    };\n\n    this.handleDescriptionChange = event => {\n      this.setState({\n        addFormDescription: event.target.value\n      });\n    };\n\n    this.handleOwnerChange = event => {\n      this.setState({\n        addFormOwner: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      const _this$state = this.state,\n            addFormValue = _this$state.addFormValue,\n            addFormDescription = _this$state.addFormDescription,\n            addFormOwner = _this$state.addFormOwner;\n      const addTicket = this.props.addTicket;\n      event.preventDefault();\n      addTicket({\n        title: addFormValue,\n        status: 'Pending',\n        description: addFormDescription,\n        owner: addFormOwner\n      });\n      this.setState({\n        addFormValue: \"\"\n      });\n      this.setState({\n        addFormStatus: \"\"\n      });\n      this.setState({\n        addFormOwner: \"\"\n      });\n    };\n\n    this.renderAddForm = () => {\n      const _this$state2 = this.state,\n            addFormVisible = _this$state2.addFormVisible,\n            addFormValue = _this$state2.addFormValue,\n            addFormDescription = _this$state2.addFormDescription,\n            addFormOwner = _this$state2.addFormOwner;\n\n      if (addFormVisible) {\n        return React.createElement(\"div\", {\n          id: \"todo-add-form\",\n          className: \"col s10 offset-s1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleFormSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-field display-fc-c\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"display-f-c margin-b-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-main margin-r-1\",\n          value: addFormValue,\n          onChange: this.handleInputChange,\n          placeholder: \"enter ticket title\",\n          id: \"ticketTitle\",\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"input-main margin-l-1\",\n          value: addFormOwner,\n          onChange: this.handleOwnerChange,\n          placeholder: \"enter ticket owner\",\n          id: \"ticketOwner\",\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"textarea\", {\n          className: \"textarea-main\",\n          value: addFormDescription,\n          onChange: this.handleDescriptionChange,\n          placeholder: \"enter ticket description\",\n          id: \"ticketDescription\",\n          type: \"textarea\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"button-main\",\n          type: \"submit\",\n          value: \"Submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }))));\n      }\n    };\n  }\n\n  renderToDos() {\n    const data = this.props.data;\n    const pendingTickets = [];\n    const startedTickets = [];\n    const reviewingTickets = [];\n    const doneTickets = [];\n\n    _.map(data, (value, key) => {\n      const ticket = {\n        ticketValue: value,\n        ticketKey: key\n      };\n\n      switch (ticket.ticketValue.status) {\n        case 'Pending':\n          pendingTickets.push(ticket);\n          break;\n\n        case 'Started':\n          startedTickets.push(ticket);\n          break;\n\n        case 'In Review':\n          reviewingTickets.push(ticket);\n          break;\n\n        case 'Done':\n          doneTickets.push(ticket);\n          break;\n\n        default:\n          pendingTickets.push(ticket);\n          break;\n      }\n    });\n\n    return React.createElement(React.Fragment, null, React.createElement(TicketColumn, {\n      title: \"Pending\",\n      color: \"grey\",\n      tickets: pendingTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(TicketColumn, {\n      title: \"Started\",\n      color: \"grey\",\n      tickets: startedTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(TicketColumn, {\n      title: \"In Review\",\n      color: \"grey\",\n      tickets: reviewingTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(TicketColumn, {\n      title: \"Done\",\n      color: \"grey\",\n      tickets: doneTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    const addFormVisible = this.state.addFormVisible;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ticket-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.renderToDos()), this.renderAddForm(), React.createElement(\"div\", {\n      className: \"button-container fixed-action-btn margin-t-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        addFormVisible: !addFormVisible\n      }),\n      className: \"button-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, addFormVisible ? 'close' : 'add')));\n  }\n\n}\n\nconst mapStateToProps = ({\n  data\n}) => {\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(ToDoList);","map":{"version":3,"sources":["/Users/jonaspeek/SYE/frontend/src/components/ToDoList.js"],"names":["React","Component","connect","_","actions","TicketColumn","ToDoList","state","addFormVisible","addFormValue","addFormDescription","addFormOwner","handleInputChange","event","setState","target","value","handleDescriptionChange","handleOwnerChange","handleFormSubmit","addTicket","props","preventDefault","title","status","description","owner","addFormStatus","renderAddForm","renderToDos","data","pendingTickets","startedTickets","reviewingTickets","doneTickets","map","key","ticket","ticketValue","ticketKey","push","componentWillMount","fetchToDos","render","mapStateToProps"],"mappings":"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","sourcesContent":["import \"./ToDoList.css\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport * as actions from \"../actions\";\nimport TicketColumn from './TicketColumn';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\n\nclass ToDoList extends Component {\n  state = {\n    addFormVisible: false,\n    addFormValue: \"\",\n    addFormDescription: \"\",\n    addFormOwner: \"\"\n  };\n\n  handleInputChange = event => {\n    this.setState({ addFormValue: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ addFormDescription: event.target.value });\n  };\n\n  handleOwnerChange = event => {\n    this.setState({ addFormOwner: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    const { addFormValue, addFormDescription, addFormOwner } = this.state;\n    const { addTicket } = this.props;\n    event.preventDefault();\n    addTicket({ \n      title: addFormValue, status: 'Pending', \n      description: addFormDescription, \n      owner: addFormOwner \n    });\n    this.setState({ addFormValue: \"\" });\n    this.setState({ addFormStatus: \"\" });\n    this.setState({ addFormOwner: \"\" });\n  };\n\n  renderAddForm = () => {\n    const { addFormVisible, addFormValue, addFormDescription, addFormOwner } = this.state;\n    if (addFormVisible) {\n      return (\n        <div id=\"todo-add-form\" className=\"col s10 offset-s1\">\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"input-field display-fc-c\">\n              <div className='display-f-c margin-b-1'>\n                <input\n                  className='input-main margin-r-1'\n                  value={addFormValue}\n                  onChange={this.handleInputChange}\n                  placeholder='enter ticket title'\n                  id=\"ticketTitle\"\n                  type=\"text\"\n                /> <br/>\n                <input\n                  className='input-main margin-l-1'\n                  value={addFormOwner}\n                  onChange={this.handleOwnerChange}\n                  placeholder='enter ticket owner'\n                  id=\"ticketOwner\"\n                  type=\"text\"\n                /> <br/>\n              </div>\n              <textarea\n                className='textarea-main'\n                value={addFormDescription}\n                onChange={this.handleDescriptionChange}\n                placeholder='enter ticket description'\n                id=\"ticketDescription\"\n                type=\"textarea\"\n              /><br/>\n              <input className='button-main' type=\"submit\" value=\"Submit\"></input>\n            </div>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  renderToDos() {\n    const { data } = this.props;\n\n    const pendingTickets = [];\n    const startedTickets = [];\n    const reviewingTickets = [];\n    const doneTickets = [];\n\n    _.map(data, (value, key) => {\n      const ticket = {ticketValue: value, ticketKey: key};\n      switch (ticket.ticketValue.status) {\n        case 'Pending':\n          pendingTickets.push(ticket)\n          break;\n        case 'Started':\n          startedTickets.push(ticket)\n          break;\n        case 'In Review':\n          reviewingTickets.push(ticket)\n          break;\n        case 'Done':\n          doneTickets.push(ticket)\n          break;\n        default:\n          pendingTickets.push(ticket)\n          break;\n      }\n    });\n\n    return (\n      <>\n        <TicketColumn\n          title='Pending'\n          color='grey'\n          tickets={pendingTickets}\n        />\n        <TicketColumn\n          title='Started'\n          color='grey'\n          tickets={startedTickets}\n        />\n        <TicketColumn\n          title='In Review'\n          color='grey'\n          tickets={reviewingTickets}\n        />\n        <TicketColumn\n          title='Done'\n          color='grey'\n          tickets={doneTickets}\n        />\n      </>\n    );\n\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    const { addFormVisible } = this.state;\n    return (\n      <div>\n        <div className='ticket-container'>\n          {this.renderToDos()}\n        </div>\n        {this.renderAddForm()}\n        <div className='button-container fixed-action-btn margin-t-1'>\n          <button\n            onClick={() => this.setState({ addFormVisible: !addFormVisible })}\n            className='button-main'\n          >\n            {addFormVisible ? 'close' : 'add'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ data }) => {\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(ToDoList);"]},"metadata":{},"sourceType":"module"}