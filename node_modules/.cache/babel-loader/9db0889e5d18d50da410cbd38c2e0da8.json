{"ast":null,"code":"var _jsxFileName = \"/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/Ticket.js\";\nimport React, { Component } from 'react';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\nimport { connect } from \"react-redux\";\nimport { completeToDo, updateTicket } from \"../actions\";\nimport Modal from './page_layout/Modal';\n\nclass Ticket extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isEditOpen: false,\n      isExpanded: false\n    };\n\n    this.handleCompleteClick = (ticketId, currentStatus) => {\n      const _this$props = this.props,\n            completeToDo = _this$props.completeToDo,\n            updateTicket = _this$props.updateTicket;\n\n      switch (currentStatus) {\n        case 'Pending':\n          updateTicket(ticketId, 'Started');\n          break;\n\n        case 'Started':\n          updateTicket(ticketId, 'In Review');\n          break;\n\n        case 'In Review':\n          updateTicket(ticketId, 'Done');\n          break;\n\n        default:\n          completeToDo(ticketId);\n          break;\n      }\n    };\n\n    this.handleRestartTicket = ticketId => {\n      const _this$props2 = this.props,\n            completeToDo = _this$props2.completeToDo,\n            updateTicket = _this$props2.updateTicket;\n      updateTicket(ticketId, 'Pending');\n    };\n\n    this.handleDeleteTicket = ticketId => {\n      const completeToDo = this.props.completeToDo;\n      completeToDo(ticketId);\n    };\n\n    this.handleClick = () => {\n      const isEditOpen = this.state.isEditOpen;\n      this.setState({\n        isEditOpen: !isEditOpen\n      });\n    };\n\n    this.expandToggle = () => {\n      const isExpanded = this.state.isExpanded;\n      this.setState({\n        isExpanded: !isExpanded\n      });\n    };\n\n    this.classes = status => {\n      return status === 'Done' ? 'color-bg-success' : status === 'Pending' ? 'color-bg-pending' : 'color-bg-main';\n    };\n\n    this.noStatus = () => {\n      const status = this.state.status;\n      return status === '' ? 'button-close' : 'button-main';\n    };\n\n    this.button = status => {\n      switch (status) {\n        case 'Pending':\n          return 'Start';\n\n        case 'Started':\n          return 'Review Submitted';\n\n        case 'In Review':\n          return 'Done';\n\n        default:\n          return 'Delete';\n      }\n    };\n\n    this.nextButton = (ticketId, currentStatus) => {\n      if (currentStatus !== 'Done') {\n        return React.createElement(\"div\", {\n          className: \"button-container margin-t-1 margin-b-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"button-main width-100\",\n          onClick: () => this.handleCompleteClick(ticketId, currentStatus),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, this.button(currentStatus)));\n      }\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          ticketId = _this$props3.ticketId,\n          title = _this$props3.title,\n          description = _this$props3.description,\n          owner = _this$props3.owner,\n          status = _this$props3.status;\n    const _this$state = this.state,\n          isEditOpen = _this$state.isEditOpen,\n          isExpanded = _this$state.isExpanded;\n    return React.createElement(\"div\", {\n      className: \"single-ticket-container \".concat(this.classes(status)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ticket-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, !isExpanded && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Title: \", title), this.nextButton(ticketId, status)), isExpanded ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Description\"), description ? React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, description) : null, owner ? React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Owner\") : null, React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, owner), isEditOpen && React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Text is here\")), this.nextButton(ticketId, status), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-main margin-r-1 width-100\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"edit\"), React.createElement(\"button\", {\n      className: \"button-close margin-l-1 width-100\",\n      onClick: () => this.expandToggle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"collapse\")), React.createElement(\"div\", {\n      className: \"button-container margin-t-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-close width-100\",\n      onClick: () => this.handleDeleteTicket(ticketId, status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Delete Ticket\"), React.createElement(\"button\", {\n      className: \"button-close width-100\",\n      onClick: () => this.handleRestartTicket(ticketId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Restart Ticket\"))) : React.createElement(React.Fragment, null, status !== 'Done' && React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-main\",\n      onClick: () => this.expandToggle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"expand\"))), !isExpanded && status === 'Done' && React.createElement(\"div\", {\n      className: \"button-container margin-t-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-close\",\n      onClick: () => this.handleDeleteTicket(ticketId, status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"delete ticket\"))));\n  }\n\n}\n\nexport default connect(null, {\n  completeToDo,\n  updateTicket\n})(Ticket);","map":{"version":3,"sources":["/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/Ticket.js"],"names":["React","Component","connect","completeToDo","updateTicket","Modal","Ticket","state","isEditOpen","isExpanded","handleCompleteClick","ticketId","currentStatus","props","handleRestartTicket","handleDeleteTicket","handleClick","setState","expandToggle","classes","status","noStatus","button","nextButton","render","title","description","owner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\n\nimport { connect } from \"react-redux\";\nimport { completeToDo, updateTicket } from \"../actions\";\nimport Modal from './page_layout/Modal';\n\n\nclass Ticket extends Component {\n\n  state = {\n    isEditOpen: false,\n    isExpanded: false,\n  };\n\n  handleCompleteClick = (ticketId, currentStatus) => {\n    const { completeToDo, updateTicket } = this.props;\n    switch(currentStatus) {\n      case 'Pending':\n        updateTicket(ticketId, 'Started');\n        break;\n      case 'Started':\n        updateTicket(ticketId, 'In Review');\n        break;\n      case 'In Review':\n        updateTicket(ticketId, 'Done');\n        break;\n      default:\n        completeToDo(ticketId);\n        break;\n    }\n  };\n\n  handleRestartTicket = (ticketId) => {\n    const { completeToDo, updateTicket } = this.props;\n    \n    updateTicket(ticketId, 'Pending');\n  };\n\n  handleDeleteTicket = (ticketId) => {\n    const { completeToDo } = this.props;\n    completeToDo(ticketId);\n  };\n\n  handleClick = () => {\n    const { isEditOpen } = this.state;\n    this.setState({ isEditOpen: !isEditOpen })\n  }\n\n  expandToggle = () => {\n    const { isExpanded } = this.state;\n    this.setState({ isExpanded: !isExpanded })\n  }\n\n  classes = (status) => {\n    return status === 'Done' ? 'color-bg-success' : \n    status === 'Pending' ? 'color-bg-pending' : 'color-bg-main';\n  };\n\n  noStatus = () => {\n    const { status } = this.state;\n    return status === '' ? 'button-close' : 'button-main';\n  }\n\n  button = (status) => {\n    switch(status){\n      case 'Pending':\n        return 'Start';\n      case 'Started':\n        return 'Review Submitted';\n      case 'In Review':\n        return 'Done';\n      default:\n        return 'Delete';\n    }\n  };\n\n  nextButton = (ticketId, currentStatus) => {\n    if(currentStatus !== 'Done') {\n      return (\n        <div className='button-container margin-t-1 margin-b-1'>\n          <button\n            className='button-main width-100'\n            onClick={() => this.handleCompleteClick(ticketId, currentStatus)}\n          >\n            { this.button(currentStatus) }\n          </button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const { ticketId, title, description, owner, status } = this.props;\n    const { isEditOpen, isExpanded } = this.state;\n    return (\n      <div className={`single-ticket-container ${this.classes(status)}`}>\n        <div className='ticket-text-container'>\n          { !isExpanded && \n            <>\n            <div className='ticket-text-spacer'>Title: { title }</div>\n            {this.nextButton(ticketId, status)}\n            </>\n          }\n          { isExpanded ?\n            <>\n              <div className='ticket-text-spacer ticket-text-header'>Title</div>\n              <div className='ticket-text-spacer'>{ title }</div>\n              <div className='ticket-text-spacer ticket-text-header'>Description</div>\n              {description ? <div className='ticket-text-spacer'>{ description }</div> : null}\n              {owner? <div className='ticket-text-spacer ticket-text-header'>Owner</div> : null}\n              <div className='ticket-text-spacer'>{ owner }</div>\n              { isEditOpen &&\n                <Modal>\n                  <div>Text is here</div>\n                </Modal>\n              }\n              { this.nextButton(ticketId, status) }\n              <div className='button-container'>\n                <button className='button-main margin-r-1 width-100' onClick={() => this.handleClick()}>\n                  edit\n                </button>\n                <button className='button-close margin-l-1 width-100' onClick={() => this.expandToggle()}>\n                  collapse\n                </button>\n              </div>\n              <div className='button-container margin-t-1'>\n                <button\n                  className='button-close width-100'\n                  onClick={() => this.handleDeleteTicket(ticketId, status)}\n                >\n                  Delete Ticket\n                </button>\n                <button\n                  className='button-close width-100'\n                  onClick={() => this.handleRestartTicket(ticketId)}\n                >\n                  Restart Ticket\n                </button>\n              </div>\n            </>\n            :\n            <>\n            { status !== 'Done' &&\n              <div className='button-container'>\n                <button className='button-main' onClick={() => this.expandToggle()}>\n                  expand\n                </button>\n              </div>\n            }\n            </>\n          }\n          {\n            !isExpanded && status === 'Done' &&\n            <div className='button-container margin-t-1'>\n              <button\n                className='button-close'\n                onClick={() => this.handleDeleteTicket(ticketId, status)}\n              >\n                delete ticket\n              </button>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { completeToDo, updateTicket })(Ticket);\n"]},"metadata":{},"sourceType":"module"}