{"ast":null,"code":"var _jsxFileName = \"/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/ToDoList.js\";\nimport \"./ToDoList.css\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport * as actions from \"../actions\";\nimport ToDoListItem from \"./ToDoListItem\";\n\nclass ToDoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addFormVisible: false,\n      addFormValue: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        addFormValue: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      const addFormValue = this.state.addFormValue;\n      const addTicket = this.props.addTicket;\n      event.preventDefault();\n      addTicket({\n        title: addFormValue\n      });\n      this.setState({\n        addFormValue: \"\"\n      });\n    };\n\n    this.renderAddForm = () => {\n      const _this$state = this.state,\n            addFormVisible = _this$state.addFormVisible,\n            addFormValue = _this$state.addFormValue;\n\n      if (addFormVisible) {\n        return React.createElement(\"div\", {\n          id: \"todo-add-form\",\n          className: \"col s10 offset-s1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleFormSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons prefix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"note_add\"), React.createElement(\"input\", {\n          value: addFormValue,\n          onChange: this.handleInputChange,\n          id: \"toDoNext\",\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"toDoNext\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"What To Do Next\"))));\n      }\n    };\n  }\n\n  renderToDos() {\n    const data = this.props.data; // const tickets = _.map(data, (value, key) => {\n    //   return <ToDoListItem key={key} todoId={key} todo={value} />;\n    // });\n\n    const tickets = _.map(data, (value, key) => {\n      return React.createElement(Ticket, {\n        key: key,\n        title: data.title,\n        description: data.description,\n        status: data.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    });\n\n    if (!_.isEmpty(tickets)) {\n      return tickets;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col s10 offset-s1 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Nothing was found\",\n      id: \"nothing-was-found\",\n      src: \"/img/nothing.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"You have completed all the tickets\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Start by clicking add button in the bottom of the screen\"));\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    const addFormVisible = this.state.addFormVisible;\n    return React.createElement(\"div\", {\n      className: \"to-do-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.renderAddForm(), this.renderToDos()), React.createElement(\"div\", {\n      className: \"fixed-action-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        addFormVisible: !addFormVisible\n      }),\n      className: \"btn-floating btn-large teal darken-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, addFormVisible ? React.createElement(\"i\", {\n      className: \"large material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"close\") : React.createElement(\"i\", {\n      className: \"large material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"add\"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  data\n}) => {\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(ToDoList);","map":{"version":3,"sources":["/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/ToDoList.js"],"names":["React","Component","connect","_","actions","ToDoListItem","ToDoList","state","addFormVisible","addFormValue","handleInputChange","event","setState","target","value","handleFormSubmit","addTicket","props","preventDefault","title","renderAddForm","renderToDos","data","tickets","map","key","description","status","isEmpty","componentWillMount","fetchToDos","render","mapStateToProps"],"mappings":";AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACNC,MAAAA,cAAc,EAAE,KADV;AAENC,MAAAA,YAAY,EAAE;AAFR,KADuB;;AAAA,SAM/BC,iBAN+B,GAMXC,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA7B,OAAd;AACD,KAR8B;;AAAA,SAU/BC,gBAV+B,GAUZJ,KAAK,IAAI;AAAA,YAClBF,YADkB,GACD,KAAKF,KADJ,CAClBE,YADkB;AAAA,YAElBO,SAFkB,GAEJ,KAAKC,KAFD,CAElBD,SAFkB;AAG1BL,MAAAA,KAAK,CAACO,cAAN;AACAF,MAAAA,SAAS,CAAC;AAAEG,QAAAA,KAAK,EAAEV;AAAT,OAAD,CAAT;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAhB8B;;AAAA,SAkB/BW,aAlB+B,GAkBf,MAAM;AAAA,0BACqB,KAAKb,KAD1B;AAAA,YACZC,cADY,eACZA,cADY;AAAA,YACIC,YADJ,eACIA,YADJ;;AAEpB,UAAID,cAAJ,EAAoB;AAClB,eACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,QAAQ,EAAE,KAAKO,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,UAAA,KAAK,EAAEN,YADT;AAEE,UAAA,QAAQ,EAAE,KAAKC,iBAFjB;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAQE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARF,CADF,CADF,CADF;AAgBD;AACF,KAtC8B;AAAA;;AAwC/BW,EAAAA,WAAW,GAAG;AAAA,UACJC,IADI,GACK,KAAKL,KADV,CACJK,IADI,EAEZ;AACA;AACA;;AAEA,UAAMC,OAAO,GAAGpB,CAAC,CAACqB,GAAF,CAAMF,IAAN,EAAY,CAACR,KAAD,EAAQW,GAAR,KAAgB;AAC1C,aACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,GADP;AAEE,QAAA,KAAK,EAAEH,IAAI,CAACH,KAFd;AAGE,QAAA,WAAW,EAAEG,IAAI,CAACI,WAHpB;AAIE,QAAA,MAAM,EAAEJ,IAAI,CAACK,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATe,CAAhB;;AAWA,QAAI,CAACxB,CAAC,CAACyB,OAAF,CAAUL,OAAV,CAAL,EAAyB;AACvB,aAAOA,OAAP;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,mBADN;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,GAAG,EAAC,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAPF,CADF;AAWD;;AAEDM,EAAAA,kBAAkB,GAAG;AACnB,SAAKZ,KAAL,CAAWa,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCvB,cADD,GACoB,KAAKD,KADzB,CACCC,cADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKY,aAAL,EADH,EAEG,KAAKC,WAAL,EAFH,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKT,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAE,CAACA;AAAnB,OAAd,CADjB;AAEE,MAAA,SAAS,EAAC,sCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,cAAc,GACb;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADa,GAGb;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,CADF,CALF,CADF;AAoBD;;AAnG8B;;AAsGjC,MAAMwB,eAAe,GAAG,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAc;AACpC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CAAC8B,eAAD,EAAkB5B,OAAlB,CAAP,CAAkCE,QAAlC,CAAf","sourcesContent":["import \"./ToDoList.css\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport * as actions from \"../actions\";\nimport ToDoListItem from \"./ToDoListItem\";\n\nclass ToDoList extends Component {\n  state = {\n    addFormVisible: false,\n    addFormValue: \"\"\n  };\n\n  handleInputChange = event => {\n    this.setState({ addFormValue: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    const { addFormValue } = this.state;\n    const { addTicket } = this.props;\n    event.preventDefault();\n    addTicket({ title: addFormValue });\n    this.setState({ addFormValue: \"\" });\n  };\n\n  renderAddForm = () => {\n    const { addFormVisible, addFormValue } = this.state;\n    if (addFormVisible) {\n      return (\n        <div id=\"todo-add-form\" className=\"col s10 offset-s1\">\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"input-field\">\n              <i className=\"material-icons prefix\">note_add</i>\n              <input\n                value={addFormValue}\n                onChange={this.handleInputChange}\n                id=\"toDoNext\"\n                type=\"text\"\n              />\n              <label htmlFor=\"toDoNext\">What To Do Next</label>\n            </div>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  renderToDos() {\n    const { data } = this.props;\n    // const tickets = _.map(data, (value, key) => {\n    //   return <ToDoListItem key={key} todoId={key} todo={value} />;\n    // });\n\n    const tickets = _.map(data, (value, key) => {\n      return (\n        <Ticket \n          key={key}\n          title={data.title}\n          description={data.description}\n          status={data.status}\n        />\n      );\n    });\n\n    if (!_.isEmpty(tickets)) {\n      return tickets;\n    }\n    return (\n      <div className=\"col s10 offset-s1 center-align\">\n        <img\n          alt=\"Nothing was found\"\n          id=\"nothing-was-found\"\n          src=\"/img/nothing.png\"\n        />\n        <h4>You have completed all the tickets</h4>\n        <p>Start by clicking add button in the bottom of the screen</p>\n      </div>\n    );\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    const { addFormVisible } = this.state;\n    return (\n      <div className=\"to-do-list-container\">\n        <div className=\"row\">\n          {this.renderAddForm()}\n          {this.renderToDos()}\n        </div>\n        <div className=\"fixed-action-btn\">\n          <button\n            onClick={() => this.setState({ addFormVisible: !addFormVisible })}\n            className=\"btn-floating btn-large teal darken-4\"\n          >\n            {addFormVisible ? (\n              <i className=\"large material-icons\">close</i>\n            ) : (\n              <i className=\"large material-icons\">add</i>\n            )}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ data }) => {\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(ToDoList);"]},"metadata":{},"sourceType":"module"}