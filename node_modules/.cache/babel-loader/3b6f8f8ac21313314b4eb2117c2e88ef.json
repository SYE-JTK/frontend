{"ast":null,"code":"var _jsxFileName = \"/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/ToDoList.js\";\nimport \"./ToDoList.css\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport * as actions from \"../actions\";\nimport TicketColumn from './TicketColumn';\nimport './ticketHomePage.css';\n\nclass ToDoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addFormVisible: false,\n      addFormValue: \"\",\n      addFormDescription: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        addFormValue: event.target.value\n      });\n    };\n\n    this.handleDescriptionChange = event => {\n      this.setState({\n        addFormDescription: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      const _this$state = this.state,\n            addFormValue = _this$state.addFormValue,\n            addFormDescription = _this$state.addFormDescription;\n      const addTicket = this.props.addTicket;\n      event.preventDefault();\n      addTicket({\n        title: addFormValue,\n        status: 'Pending',\n        description: addFormDescription\n      });\n      this.setState({\n        addFormValue: \"\"\n      });\n      this.setState({\n        addFormStatus: \"\"\n      });\n    };\n\n    this.renderAddForm = () => {\n      const _this$state2 = this.state,\n            addFormVisible = _this$state2.addFormVisible,\n            addFormValue = _this$state2.addFormValue,\n            addFormDescription = _this$state2.addFormDescription;\n\n      if (addFormVisible) {\n        return React.createElement(\"div\", {\n          id: \"todo-add-form\",\n          className: \"col s10 offset-s1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleFormSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons prefix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Ticket Title: \"), React.createElement(\"input\", {\n          value: addFormValue,\n          onChange: this.handleInputChange,\n          id: \"ticketTitle\",\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"material-icons prefix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Ticket Description\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(\"textarea\", {\n          value: addFormDescription,\n          onChange: this.handleDescriptionChange,\n          id: \"ticketDescription\",\n          type: \"textarea\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }))));\n      }\n    };\n  }\n\n  renderToDos() {\n    const data = this.props.data;\n    const pendingTickets = [];\n    const startedTickets = [];\n    const reviewingTickets = [];\n    const doneTickets = [];\n\n    _.map(data, (value, key) => {\n      const ticket = {\n        ticketValue: value,\n        ticketKey: key\n      };\n\n      switch (ticket.ticketValue.status) {\n        case 'Pending':\n          pendingTickets.push(ticket);\n          break;\n\n        case 'Started':\n          startedTickets.push(ticket);\n          break;\n\n        case 'In Review':\n          reviewingTickets.push(ticket);\n          break;\n\n        case 'Done':\n          doneTickets.push(ticket);\n          break;\n\n        default:\n          pendingTickets.push(ticket);\n          break;\n      }\n    });\n\n    return React.createElement(React.Fragment, null, React.createElement(TicketColumn, {\n      title: \"Pending\",\n      color: \"grey\",\n      tickets: pendingTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(TicketColumn, {\n      title: \"Started\",\n      color: \"grey\",\n      tickets: startedTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(TicketColumn, {\n      title: \"In Review\",\n      color: \"grey\",\n      tickets: reviewingTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(TicketColumn, {\n      title: \"Done\",\n      color: \"grey\",\n      tickets: doneTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    const addFormVisible = this.state.addFormVisible;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ticket-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.renderToDos()), this.renderAddForm(), React.createElement(\"div\", {\n      className: \"fixed-action-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        addFormVisible: !addFormVisible\n      }),\n      className: \"btn-floating btn-large teal darken-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, addFormVisible ? React.createElement(\"i\", {\n      className: \"large material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"close\") : React.createElement(\"i\", {\n      className: \"large material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"add\"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  data\n}) => {\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(ToDoList);","map":{"version":3,"sources":["/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/ToDoList.js"],"names":["React","Component","connect","_","actions","TicketColumn","ToDoList","state","addFormVisible","addFormValue","addFormDescription","handleInputChange","event","setState","target","value","handleDescriptionChange","handleFormSubmit","addTicket","props","preventDefault","title","status","description","addFormStatus","renderAddForm","renderToDos","data","pendingTickets","startedTickets","reviewingTickets","doneTickets","map","key","ticket","ticketValue","ticketKey","push","componentWillMount","fetchToDos","render","mapStateToProps"],"mappings":"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","sourcesContent":["import \"./ToDoList.css\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport * as actions from \"../actions\";\nimport TicketColumn from './TicketColumn';\nimport './ticketHomePage.css';\n\nclass ToDoList extends Component {\n  state = {\n    addFormVisible: false,\n    addFormValue: \"\",\n    addFormDescription: \"\"\n  };\n\n  handleInputChange = event => {\n    this.setState({ addFormValue: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ addFormDescription: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    const { addFormValue, addFormDescription } = this.state;\n    const { addTicket } = this.props;\n    event.preventDefault();\n    addTicket({ title: addFormValue, status: 'Pending', description: addFormDescription });\n    this.setState({ addFormValue: \"\" });\n    this.setState({ addFormStatus: \"\" });\n  };\n\n  renderAddForm = () => {\n    const { addFormVisible, addFormValue, addFormDescription } = this.state;\n    if (addFormVisible) {\n      return (\n        <div id=\"todo-add-form\" className=\"col s10 offset-s1\">\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"input-field\">\n              <i className=\"material-icons prefix\">Ticket Title: </i>\n              <input\n                value={addFormValue}\n                onChange={this.handleInputChange}\n                id=\"ticketTitle\"\n                type=\"text\"\n              /> <br/>\n              <i className=\"material-icons prefix\">Ticket Description</i><br/>\n              <textarea\n                value={addFormDescription}\n                onChange={this.handleDescriptionChange}\n                id=\"ticketDescription\"\n                type=\"textarea\"\n              /><br/>\n              <input type=\"submit\" value=\"Submit\"></input>\n            </div>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  renderToDos() {\n    const { data } = this.props;\n\n    const pendingTickets = [];\n    const startedTickets = [];\n    const reviewingTickets = [];\n    const doneTickets = [];\n\n    _.map(data, (value, key) => {\n      const ticket = {ticketValue: value, ticketKey: key};\n      switch (ticket.ticketValue.status) {\n        case 'Pending':\n          pendingTickets.push(ticket)\n          break;\n        case 'Started':\n          startedTickets.push(ticket)\n          break;\n        case 'In Review':\n          reviewingTickets.push(ticket)\n          break;\n        case 'Done':\n          doneTickets.push(ticket)\n          break;\n        default:\n          pendingTickets.push(ticket)\n          break;\n      }\n    });\n\n    return (\n      <>\n        <TicketColumn\n          title='Pending'\n          color='grey'\n          tickets={pendingTickets}\n        />\n        <TicketColumn\n          title='Started'\n          color='grey'\n          tickets={startedTickets}\n        />\n        <TicketColumn\n          title='In Review'\n          color='grey'\n          tickets={reviewingTickets}\n        />\n        <TicketColumn\n          title='Done'\n          color='grey'\n          tickets={doneTickets}\n        />\n      </>\n    );\n\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    const { addFormVisible } = this.state;\n    return (\n      <div>\n        <div className='ticket-container'>\n          {this.renderToDos()}\n        </div>\n        {this.renderAddForm()}\n        <div className=\"fixed-action-btn\">\n          <button\n            onClick={() => this.setState({ addFormVisible: !addFormVisible })}\n            className=\"btn-floating btn-large teal darken-4\"\n          >\n            {addFormVisible ? (\n              <i className=\"large material-icons\">close</i>\n            ) : (\n              <i className=\"large material-icons\">add</i>\n            )}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ data }) => {\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(ToDoList);"]},"metadata":{},"sourceType":"module"}