{"ast":null,"code":"var _jsxFileName = \"/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/Ticket.js\";\nimport React, { Component } from 'react';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\nimport { connect } from \"react-redux\";\nimport { completeToDo, updateTicket } from \"../actions\";\nimport Modal from './page_layout/Modal';\n\nclass Ticket extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isEditOpen: false,\n      isExpanded: false\n    };\n\n    this.handleCompleteClick = (ticketId, currentStatus) => {\n      const _this$props = this.props,\n            completeToDo = _this$props.completeToDo,\n            updateTicket = _this$props.updateTicket;\n\n      switch (currentStatus) {\n        case 'pending':\n          updateTicket(ticketId, 'started');\n          break;\n\n        case 'started':\n          updateTicket(ticketId, 'in review');\n          break;\n\n        case 'in review':\n          updateTicket(ticketId, 'done');\n          break;\n\n        case 'done':\n          completeToDo(ticketId);\n          break;\n\n        default:\n          completeToDo(ticketId);\n          break;\n      }\n    };\n\n    this.handleClick = () => {\n      const isEditOpen = this.state.isEditOpen;\n      this.setState({\n        isEditOpen: !isEditOpen\n      });\n    };\n\n    this.expandToggle = () => {\n      const isExpanded = this.state.isExpanded;\n      this.setState({\n        isExpanded: !isExpanded\n      });\n    };\n\n    this.classes = status => {\n      return status === 'done' ? 'color-bg-success' : status === 'pending' ? 'color-bg-pending' : 'color-bg-main';\n    };\n\n    this.button = status => {\n      switch (status) {\n        case 'pending':\n          return 'start';\n\n        case 'started':\n          return 'review submitted';\n\n        case 'in review':\n          return 'done';\n\n        case 'done':\n          return 'delete';\n\n        default:\n          return 'delete';\n      }\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          ticketId = _this$props2.ticketId,\n          title = _this$props2.title,\n          description = _this$props2.description,\n          owner = _this$props2.owner,\n          status = _this$props2.status;\n    const _this$state = this.state,\n          isEditOpen = _this$state.isEditOpen,\n          isExpanded = _this$state.isExpanded;\n    return React.createElement(\"div\", {\n      className: \"single-ticket-container \".concat(this.classes(status)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ticket-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, title), isExpanded ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"description\"), description ? React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, description) : null, owner ? React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"owner\") : null, React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, owner), isEditOpen ? React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"text is here\")) : null, React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-main margin-r-1 width-100\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"edit\"), React.createElement(\"button\", {\n      className: \"button-close margin-l-1 width-100\",\n      onClick: () => this.expandToggle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"collapse\")), React.createElement(\"div\", {\n      className: \"button-container margin-t-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-main width-100\",\n      onClick: () => this.handleCompleteClick(ticketId, status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.button(status)))) : React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-main\",\n      onClick: () => this.expandToggle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"expand\"))));\n  }\n\n}\n\nexport default connect(null, {\n  completeToDo,\n  updateTicket\n})(Ticket);","map":{"version":3,"sources":["/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/Ticket.js"],"names":["React","Component","connect","completeToDo","updateTicket","Modal","Ticket","state","isEditOpen","isExpanded","handleCompleteClick","ticketId","currentStatus","props","handleClick","setState","expandToggle","classes","status","button","render","title","description","owner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\n\nimport { connect } from \"react-redux\";\nimport { completeToDo, updateTicket } from \"../actions\";\nimport Modal from './page_layout/Modal';\n\n\nclass Ticket extends Component {\n\n  state = {\n    isEditOpen: false,\n    isExpanded: false,\n  };\n\n  handleCompleteClick = (ticketId, currentStatus) => {\n    const { completeToDo, updateTicket } = this.props;\n    switch(currentStatus) {\n      case 'pending':\n        updateTicket(ticketId, 'started');\n        break;\n      case 'started':\n        updateTicket(ticketId, 'in review');\n        break;\n      case 'in review':\n        updateTicket(ticketId, 'done');\n        break;\n      case 'done':\n        completeToDo(ticketId);\n        break;\n      default:\n        completeToDo(ticketId);\n        break;\n    }\n  };\n\n  handleClick = () => {\n    const { isEditOpen } = this.state;\n    this.setState({ isEditOpen: !isEditOpen })\n  }\n\n  expandToggle = () => {\n    const { isExpanded } = this.state;\n    this.setState({ isExpanded: !isExpanded })\n  }\n\n  classes = (status) => {\n    return status === 'done' ? 'color-bg-success' : \n    status === 'pending' ? 'color-bg-pending' : 'color-bg-main';\n  };\n\n  button = (status) => {\n    switch(status){\n      case 'pending':\n        return 'start';\n      case 'started':\n        return 'review submitted';\n      case 'in review':\n        return 'done';\n      case 'done':\n        return 'delete';\n      default:\n        return 'delete';\n    }\n  };\n\n  render() {\n    const { ticketId, title, description, owner, status } = this.props;\n    const { isEditOpen, isExpanded } = this.state;\n    return (\n      <div className={`single-ticket-container ${this.classes(status)}`}>\n        <div className='ticket-text-container'>\n          \n          <div className='ticket-text-spacer ticket-text-header'>title</div>\n          <div className='ticket-text-spacer'>{ title }</div>\n          { isExpanded ?\n            <>\n              <div className='ticket-text-spacer ticket-text-header'>description</div>\n              {description ? <div className='ticket-text-spacer'>{ description }</div> : null}\n              {owner? <div className='ticket-text-spacer ticket-text-header'>owner</div> : null}\n              <div className='ticket-text-spacer'>{ owner }</div>\n              { isEditOpen ? \n                <Modal>\n                  <div>text is here</div>\n                </Modal>\n                : null \n              }\n              <div className='button-container'>\n                <button className='button-main margin-r-1 width-100' onClick={() => this.handleClick()}>\n                  edit\n                </button>\n                <button className='button-close margin-l-1 width-100' onClick={() => this.expandToggle()}>\n                  collapse\n                </button>\n              </div>\n              <div className='button-container margin-t-1'>\n                <button\n                  className='button-main width-100'\n                  onClick={() => this.handleCompleteClick(ticketId, status)}\n                >\n                  { this.button(status) }\n                </button>\n              </div>\n            </>\n            :\n            <div className='button-container'>\n              <button className='button-main' onClick={() => this.expandToggle()}>\n                expand\n              </button>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { completeToDo, updateTicket })(Ticket);\n"]},"metadata":{},"sourceType":"module"}