{"ast":null,"code":"var _jsxFileName = \"/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/Ticket.js\";\nimport React, { Component } from 'react';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\nimport { connect } from \"react-redux\";\nimport { completeToDo, updateTicket } from \"../actions\";\nimport Modal from './page_layout/Modal';\n\nclass Ticket extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCompleteClick = (ticketId, currentStatus) => {\n      const _this$props = this.props,\n            completeToDo = _this$props.completeToDo,\n            updateTicket = _this$props.updateTicket;\n\n      switch (currentStatus) {\n        case 'Pending':\n          updateTicket(ticketId, 'Started');\n          break;\n\n        case 'Started':\n          updateTicket(ticketId, 'In Review');\n          break;\n\n        case 'In Review':\n          updateTicket(ticketId, 'Done');\n          break;\n\n        case 'Done':\n          completeToDo(ticketId);\n          break;\n\n        default:\n          completeToDo(ticketId);\n          break;\n      }\n    };\n\n    this.classes = status => {\n      return status === 'Done' ? 'color-bg-success' : status === 'Pending' ? 'color-bg-pending' : 'color-bg-main';\n    };\n\n    this.button = status => {\n      switch (status) {\n        case 'Pending':\n          return 'Start';\n\n        case 'Started':\n          return 'Review Submitted';\n\n        case 'In Review':\n          return 'Done';\n\n        case 'Done':\n          return 'Delete';\n\n        default:\n          return 'Delete';\n      }\n    };\n\n    this.editField = () => {\n      return React.createElement(Modal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          ticketId = _this$props2.ticketId,\n          title = _this$props2.title,\n          description = _this$props2.description,\n          owner = _this$props2.owner,\n          status = _this$props2.status;\n    const isEditOpen = this.state.isEditOpen;\n    return React.createElement(\"div\", {\n      className: \"single-ticket-container \".concat(this.classes(status)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ticket-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Description\"), description ? React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, description) : null, owner ? React.createElement(\"div\", {\n      className: \"ticket-text-spacer ticket-text-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Owner\") : null, React.createElement(\"div\", {\n      className: \"ticket-text-spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, owner), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-main\",\n      onClick: () => this.handleCompleteClick(ticketId, status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.button(status))), isEditOpen ? editField() : null));\n  }\n\n}\n\nexport default connect(null, {\n  completeToDo,\n  updateTicket\n})(Ticket);","map":{"version":3,"sources":["/Users/jonaspeek/SYE/frontend/new-js-react-redux/src/components/Ticket.js"],"names":["React","Component","connect","completeToDo","updateTicket","Modal","Ticket","handleCompleteClick","ticketId","currentStatus","props","classes","status","button","editField","render","title","description","owner","isEditOpen","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './ticketHomePage.css';\nimport './page_layout/page.css';\n\nimport { connect } from \"react-redux\";\nimport { completeToDo, updateTicket } from \"../actions\";\nimport Modal from './page_layout/Modal'\n\n\nclass Ticket extends Component {\n\n  handleCompleteClick = (ticketId, currentStatus) => {\n    const { completeToDo, updateTicket } = this.props;\n    switch(currentStatus) {\n      case 'Pending':\n        updateTicket(ticketId, 'Started');\n        break;\n      case 'Started':\n        updateTicket(ticketId, 'In Review');\n        break;\n      case 'In Review':\n        updateTicket(ticketId, 'Done');\n        break;\n      case 'Done':\n        completeToDo(ticketId);\n        break;\n      default:\n        completeToDo(ticketId);\n        break;\n    }\n  };\n\n  classes = (status) => {\n    return status === 'Done' ? 'color-bg-success' : \n    status === 'Pending' ? 'color-bg-pending' : 'color-bg-main';\n  };\n\n  button = (status) => {\n    switch(status){\n      case 'Pending':\n        return 'Start';\n      case 'Started':\n        return 'Review Submitted';\n      case 'In Review':\n        return 'Done';\n      case 'Done':\n        return 'Delete';\n      default:\n        return 'Delete';\n    }\n  };\n\n  editField = () => {\n    return (\n      <Modal></Modal>\n    )\n  }\n\n  render() {\n    const { ticketId, title, description, owner, status } = this.props;\n    const { isEditOpen } = this.state;\n    return (\n      <div className={`single-ticket-container ${this.classes(status)}`}>\n        <div className='ticket-text-container'>\n          \n          <div className='ticket-text-spacer ticket-text-header'>Title</div>\n          <div className='ticket-text-spacer'>{ title }</div>\n          <div className='ticket-text-spacer ticket-text-header'>Description</div>\n          {description ? <div className='ticket-text-spacer'>{ description }</div> : null}\n          {owner? <div className='ticket-text-spacer ticket-text-header'>Owner</div> : null}\n          <div className='ticket-text-spacer'>{ owner }</div>\n\n          <div className='button-container'>\n            <button\n              className='button-main'\n              onClick={() => this.handleCompleteClick(ticketId, status)}\n            >\n              { this.button(status) }\n            </button>\n          </div>\n          { isEditOpen ? editField() : null }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { completeToDo, updateTicket })(Ticket);\n"]},"metadata":{},"sourceType":"module"}